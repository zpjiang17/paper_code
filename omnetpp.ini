[General]
description = "Setup visualisation, scene origin, LDs"

cmdenv-status-frequency = 10s
cmdenv-output-file = "${resultdir}/${runnumber}.out"

allow-object-stealing-on-deletion=true

## Visualizer settings
*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.typename = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "map.earth"

*.visualizer.*.sceneVisualizer.sceneImageSize = 10000m
*.visualizer.*.sceneVisualizer.sceneMinX = -100000m
*.visualizer.*.sceneVisualizer.sceneMinY = -10000m
*.visualizer.*.sceneVisualizer.sceneMinZ = -10000m
*.visualizer.*.sceneVisualizer.sceneMaxX = 10000m
*.visualizer.*.sceneVisualizer.sceneMaxY = 10000m
*.visualizer.*.sceneVisualizer.sceneMaxZ = 10000m

## Enables visualisation of links, network routes, network nodes
*.visualizer.*.physicalLinkVisualizer.lineShift = 0
##*.visualizer.*.physicalLinkVisualizer.displayLinks = true
*.visualizer.*.dataLinkVisualizer.lineShift = 0
##*.visualizer.*.dataLinkVisualizer.displayLinks = true
#*.visualizer.*.networkRouteVisualizer.displayRoutes = true
*.visualizer.*.networkRouteVisualizer.lineShift = 0
*.visualizer.*.networkNodeVisualizer.displayModuleName = true 

## Enables visualization of drone load
*.visualizer.*.statisticVisualizer.signalName = "dataLoad"
*.visualizer.*.statisticVisualizer.format = "(%v)"
*.visualizer.*.statisticVisualizer.textColor = "red"
*.visualizer.*.statisticVisualizer.font = "Courier New, 12px, bold"
*.visualizer.*.statisticVisualizer.opacity = 1

## Enables visualization of mobility
*.visualizer.*.mobilityVisualizer.displayMobility = true
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.animationSpeed = 10

## Environment
*.environment.ground.typename = "FlatGround"
*.FDs[*].osgModel = "3d/drone.ive.10.scale.0,0,90.rot"
**.mobility.initFromDisplayString = false

## Coordinates of the scene origin on the map
## BSB
#*.coordinateSystem.sceneLatitude = -15.84584deg
#*.coordinateSystem.sceneLongitude = -47.93052deg
#*.coordinateSystem.sceneHeading = 90deg # scene orientation

## PUC
#*.coordinateSystem.sceneLongitude = -43.22260deg
#*.coordinateSystem.sceneLatitude = -22.97556deg
#*.coordinateSystem.sceneHeading = 90deg # scene orientation

## Campo
*.coordinateSystem.sceneLongitude = -47.926634deg
*.coordinateSystem.sceneLatitude = -15.840075deg
*.coordinateSystem.sceneHeading = 0deg # scene orientation

## Mobility constraint area for FDs, LDs and ground stations
## To specify for FDs, LDs or ground stations seperately do the following
## *.{FDs|LDs|GCSS}[*].mobility.constraintAreaMinX = -10000m
*.*[*].mobility.constraintAreaMinX = -10000m
*.*[*].mobility.constraintAreaMinY = -10000m 
*.*[*].mobility.constraintAreaMinZ = -10000m
*.*[*].mobility.constraintAreaMaxX = 10000m
*.*[*].mobility.constraintAreaMaxY = 10000m
*.*[*].mobility.constraintAreaMaxZ = 10000m

## Display communication range / interference range from wifi for all FDs, LDs and ground stations
## To specify for FDs, LDs or ground stations seperately do the following
## *.{FDs|LDs|GCSS}[*].wlan[*].radio.displayCommunicationRange = true
*.*[*].wlan[*].radio.displayCommunicationRange = true
*.*[*].wlan[0].radio.displayInterferenceRange = false

## Set sensor settings 
*.sensor*.wlan[0].radio.energyConsumer.typename = "SensorstateBasedEpEnergyConsumer"
*.sensor*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
*.sensor*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.sensor*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
*.sensor*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.sensor*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.sensor*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.sensor*.wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.sensor*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW
*.sensor*.energyStorage.typename = "IdealEpEnergyStorage"

[Config Wifi]
network = GradysNetwork
description = "Configure FDs, GCS and LDs for wifi only communication"

## FD setup:
*.FDs[*].numApps = 1

*.FDs[*].app[0].typename = "UdpCommunicationApp"
*.FDs[*].app[0].localPort = 1000
*.FDs[*].app[0].destPort = 1000
*.FDs[*].app[0].sendInterval = 1s
*.FDs[*].app[0].startTime = 1s
*.FDs[*].app[0].stopTime = -1s
*.FDs[*].app[0].messageLength = 1454Byte

*.FDs[*].protocol.typename = "HCCASProtocol"

*.FDs[*].mobility.typename = "DroneMobility"
*.FDs[*].mobility.coordinateSystemModule = "coordinateSystem" 
*.FDs[*].mobility.waypointProximity = 1m
*.FDs[*].mobility.speed = 5mps
*.FDs[*].mobility.homeLatitude = -15.840068deg
*.FDs[*].mobility.homeLongitude = -47.926633deg

## Ground station setup
*.GCS.numApps = 1

*.GCS.app[0].typename = "UdpCommunicationApp"
*.GCS.app[0].destPort = 1000
*.GCS.app[0].localPort = 1000
*.GCS.app[0].sendInterval = 1s
*.GCS.app[0].messageLength = 1454Byte
*.GCS.app[0].startTime = 1s

*.GCS.protocol.typename = "SimpleGroundProtocol"

*.GCS.mobility.typename = "StationaryMobility"
*.GCS.mobility.coordinateSystemModule = "coordinateSystem"
*.GCS.mobility.initialAltitude = 0m

*.GCS.mobility.initialLatitude = -15.840068deg
*.GCS.mobility.initialLongitude = -47.926633deg

## Sensor setup
*.numLDs = 14

*.LDs[*].numApps = 1

*.LDs[*].app[0].typename = "UdpCommunicationApp"
*.LDs[*].app[0].destPort = 1000
*.LDs[*].app[0].localPort = 1000
*.LDs[*].app[0].sendInterval = 8s
*.LDs[*].app[0].startTime = exponential(1s)
*.LDs[*].app[0].messageLength = 1454Byte

*.LDs[0..2].protocol.typename = "SimpleSensorProtocol"

*.LDs[*].mobility.typename = "StationaryMobility"  
*.LDs[*].mobility.coordinateSystemModule = "coordinateSystem"
*.LDs[*].mobility.initialAltitude = 0m

*.LDs[0].mobility.initialLatitude = -15.84245230deg
*.LDs[0].mobility.initialLongitude = -47.92948720deg

*.LDs[1].mobility.initialLatitude = -15.84262780deg
*.LDs[1].mobility.initialLongitude = -47.92650460deg

*.LDs[2].mobility.initialLatitude = -15.84161630deg
*.LDs[2].mobility.initialLongitude = -47.92395110deg

*.LDs[3].mobility.initialLatitude = -15.8436264deg
*.LDs[3].mobility.initialLongitude = -47.9270250deg

*.LDs[4].mobility.initialLatitude = -15.8406461deg
*.LDs[4].mobility.initialLongitude = -47.9240263deg

*.LDs[5].mobility.initialLatitude = -15.8416370deg
*.LDs[5].mobility.initialLongitude = -47.9227066deg

*.LDs[6].mobility.initialLatitude = -15.8437115deg
*.LDs[6].mobility.initialLongitude = -47.9259145deg

*.LDs[7].mobility.initialLatitude = -15.8437425deg
*.LDs[7].mobility.initialLongitude = -47.9246378deg

*.LDs[8].mobility.initialLatitude = -15.840068deg
*.LDs[8].mobility.initialLongitude = -47.924767deg

*.LDs[9].mobility.initialLatitude = -15.840068deg
*.LDs[9].mobility.initialLongitude = -47.928499deg

*.LDs[10].mobility.initialLatitude = -15.838269deg
*.LDs[10].mobility.initialLongitude = -47.926633deg

*.LDs[11].mobility.initialLatitude = -15.841867deg
*.LDs[11].mobility.initialLongitude = -47.926633deg

*.LDs[12].mobility.initialLatitude = -15.840468deg
*.LDs[12].mobility.initialLongitude = -47.925550deg

*.LDs[13].mobility.initialLatitude = -15.841867deg
*.LDs[13].mobility.initialLongitude = -47.928499deg

[Config Wifi-Dadca-3-Drones]
extends=Wifi
description="Simulation with three drones with wifi radio only"

*.numFDs = 3

*.FDs[*].protocol.typename = "DadcaProtocol"
*.FDs[*].protocol.timeoutDuration = 0.1s

*.FDs[0].app[*].startTime = normal(0s, 1s)
*.FDs[1].app[*].startTime = normal(10s, 1s)
*.FDs[2].app[*].startTime = normal(20s, 1s)
*.FDs[0].app[0].destAddresses = "FDs[1] FDs[2] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[1].app[0].destAddresses = "FDs[0] FDs[2] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[2].app[0].destAddresses = "FDs[0] FDs[1] LDs[0] LDs[1] LDs[2] GCS"


*.FDs[0].mobility.startTime = 0s
*.FDs[1].mobility.startTime = 10s
*.FDs[2].mobility.startTime = 25s
*.FDs[*].mobility.waypointFile = "paths/voo_ar.waypoints"

*.FDs[0].numFailures = 0

*.LDs[0..2].protocol.typename = "DadcaProtocolSensor"
*.LDs[*].app[0].destAddresses = "FDs[0] FDs[1] FDs[2]"

*.GCS.protocol.typename = "DadcaProtocolGround"
*.GCS.app[0].destAddresses = "FDs[0] FDs[1] FDs[2]"

[Config Wifi-Dadca-4-Drones]
extends=Wifi
description="Simulation with four drones with wifi radio only" 

*.numFDs = 4

*.FDs[*].protocol.typename = "DadcaProtocol"
*.FDs[*].protocol.timeoutDuration = 20s

*.FDs[0].app[*].startTime = normal(1s, 1s)
*.FDs[1].app[*].startTime = normal(40s, 1s)
*.FDs[2].app[*].startTime = normal(80s, 1s)
*.FDs[3].app[*].startTime = normal(110s, 1s)
*.FDs[0].app[0].destAddresses = "FDs[1] FDs[2] FDs[3] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[1].app[0].destAddresses = "FDs[0] FDs[2] FDs[3] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[2].app[0].destAddresses = "FDs[0] FDs[1] FDs[3] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[3].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] LDs[0] LDs[1] LDs[2] GCS"

*.FDs[0].mobility.startTime = 0s
*.FDs[1].mobility.startTime = 40s
*.FDs[2].mobility.startTime = 80s
*.FDs[3].mobility.startTime = 110s
*.FDs[*].mobility.waypointFile = "paths/voo_mapa_novo50.waypoints"

*.FDs[0].numFailures = 0

*.LDs[0..3].protocol.typename = "DadcaProtocolSensor"
*.LDs[*].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3]"

*.GCS.protocol.typename = "DadcaProtocolGround"
*.GCS.app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3]"



[Config Wifi-Dadca-10-Drones]
extends=Wifi
description="Simulation with ten drones with wifi radio only" 

*.numFDs = 10

*.FDs[*].protocol.typename = "DadcaProtocol"
*.FDs[*].protocol.timeoutDuration = 10s

*.FDs[0].app[*].startTime = normal(0s, 1s)
*.FDs[1].app[*].startTime = normal(10s, 1s)
*.FDs[2].app[*].startTime = normal(25s, 1s)
*.FDs[3].app[*].startTime = normal(35s, 1s)
*.FDs[4].app[*].startTime = normal(60s, 1s)
*.FDs[5].app[*].startTime = normal(80s, 1s)
*.FDs[6].app[*].startTime = normal(100s, 1s)
*.FDs[7].app[*].startTime = normal(115s, 1s)
*.FDs[8].app[*].startTime = normal(140s, 1s)
*.FDs[9].app[*].startTime = normal(150s, 1s)

*.FDs[0].app[0].destAddresses = "FDs[1] FDs[2] FDs[3] FDs[4] FDs[5] FDs[6] FDs[7] FDs[8] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[1].app[0].destAddresses = "FDs[0] FDs[2] FDs[3] FDs[4] FDs[5] FDs[6] FDs[7] FDs[8] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[2].app[0].destAddresses = "FDs[0] FDs[1] FDs[3] FDs[4] FDs[5] FDs[6] FDs[7] FDs[8] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[3].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[4] FDs[5] FDs[6] FDs[7] FDs[8] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[4].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3] FDs[5] FDs[6] FDs[7] FDs[8] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[5].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3] FDs[4] FDs[6] FDs[7] FDs[8] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[6].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3] FDs[4] FDs[5] FDs[7] FDs[8] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[7].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3] FDs[4] FDs[5] FDs[6] FDs[8] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[8].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3] FDs[4] FDs[5] FDs[6] FDs[7] FDs[9] LDs[0] LDs[1] LDs[2] GCS"
*.FDs[9].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3] FDs[4] FDs[5] FDs[6] FDs[7] FDs[8] LDs[0] LDs[1] LDs[2] GCS"

*.FDs[0].mobility.startTime = 0s
*.FDs[1].mobility.startTime = 10s
*.FDs[2].mobility.startTime = 25s
*.FDs[3].mobility.startTime = 35s
*.FDs[4].mobility.startTime = 60s
*.FDs[5].mobility.startTime = 80s
*.FDs[6].mobility.startTime = 100s
*.FDs[7].mobility.startTime = 115s
*.FDs[8].mobility.startTime = 140s
*.FDs[9].mobility.startTime = 150s

*.FDs[*].mobility.waypointFile = "paths/voo_mapa_novo50.waypoints"

*.FDs[0].numFailures = 0

*.LDs[0..13].protocol.typename = "DadcaProtocolSensor"
*.LDs[*].app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3] FDs[4] FDs[5] FDs[6] FDs[7] FDs[8] FDs[9]"

*.GCS.protocol.typename = "DadcaProtocolGround"
*.GCS.app[0].destAddresses = "FDs[0] FDs[1] FDs[2] FDs[3] FDs[4] FDs[5] FDs[6] FDs[7] FDs[8] FDs[9]"



#[Config Sim1drone-MAM]
#extends=MAM
#description="Simulation with one drone with wifi and MAM radios"
#*.numUAVs = 1
#*.FDs[0].app[0].destAddresses = "LDs[0] GCS"
#*.FDs[*].app[*].timeoutDuration = 10s
#*.FDs[0].mobility.startTime = 0s
#*.FDs[0].app[*].startTime = normal(1s, 1s)
#*.FDs[0].numFailures = 2
#*.FDs[0].failures[0].typename="SimpleConsumptionEnergy"
#*.FDs[0].failures[0].batteryCapacity = 500mAh
#*.FDs[0].failures[0].batteryRTLThreshold = 450mAh
#*.FDs[0].failures[0].batteryConsumption = 1.5A
#*.FDs[0].failures[1].typename="RandomFailureGenerator"
#*.FDs[0].failures[1].failureChance = 0.2
#
#*.GCS.app[0].destAddresses = "FDs[0]"


## Additional settings
#*.FDs[*].failures[0].typename = "RandomFailureGenerator"
#*.FDs[*].failures[0].failureStart = 5s
#*.FDs[*].failures[0].failureMinimumInterval = 10s
#*.FDs[*].failures[0].failureRollTime = 1s
#*.FDs[*].failures[0].failureChance = 0.001
#*.FDs[*].failures[0].failureDuration = 20s
